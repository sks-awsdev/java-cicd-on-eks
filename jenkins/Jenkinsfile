/*
 * Jenkins Declarative Pipeline
 * --------------------------------------------------------
 * Adjust the TODO section placeholders before running.
 */

pipeline {
    agent any                     // or { label 'your‑agent' }

    environment {
        // TODO: replace with your Docker Hub repo
        DOCKER_IMAGE = 'your-dockerhub-username/your-app-name'
    }

    stages {

        stage('Checkout') {
            steps {
                checkout scm       // uses the repo this Jenkinsfile lives in
            }
        }

        stage('Build') {
            steps {
                sh 'mvn clean package -DskipTests'   // adjust options as needed
            }
        }

        stage('Unit Tests') {
            steps {
                sh 'mvn test'       // leave blank for now if you’ve no tests
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQube') {
                    sh 'mvn sonar:sonar'
                }
            }
            // Wait for Sonar quality gate (optional)
            // post { /*…*/ }
        }

        stage('Docker Build & Push') {
            steps {
                sh """
                   docker build -t $DOCKER_IMAGE .
                   docker push $DOCKER_IMAGE
                """
            }
        }

        stage('Notify Success') {          // optional – e‑mail / Slack etc.
            when { success() }
            steps {
                echo 'Build, scan and push completed ✔'
                // mail to: …
            }
        }
    }

    post {
        failure {
            echo 'Pipeline failed ❌'
            // mail to: …
        }
    }
}
